{
    "Comment": "This is a test dictionary for the controls: dCRAB, Fourier, Uniform Distribution.",
    "Disclaimer": "Do not use this json file for optimization",
    "optimization_client_name": "Optimization_mixed_dCRAB_Fourier_NM_OneQubit_Noisy",
    "algorithm_settings": {
        "algorithm_name": "dCRAB",
        "super_iteration_number": 5,
        "max_eval_total": 50,
        "is_compensated_drift": true,
        "random_number_generator": {
            "seed_number": 420
        },
        "re_evaluation": {
            "re_evaluation_steps": [0.3, 0.5, 0.51]
        },
        "dsm_settings": {
            "general_settings": {
                "dsm_algorithm_name": "NelderMead",
                "is_adaptive": true
            },
            "stopping_criteria": {
                "xatol": 1e-2,
                "frtol": 1e-2
            }
        }
    },
    "pulses": [{"pulse_name": "Pulse_1",
                "upper_limit": 15.0,
                "lower_limit": -15.0,
                "bins_number": 101,
                "time_name": "time_1",
                "amplitude_variation": 0.3,
                "basis": {
                    "basis_class": "Fourier",
                    "basis_module": "quocslib.pulses.basis.Fourier",
                    "basis_attribute": null,
                    "basis_vector_number": 2,
                    "random_super_parameter_distribution": {
                        "distribution_class": "Uniform",
                        "distribution_module": "quocslib.pulses.superparameter.Uniform",
                        "distribution_attribute": null,
                        "lower_limit": 0.1,
                        "upper_limit": 5.0
                    }
                },
                "scaling_function": {
                    "function_type": "lambda_function",
                    "lambda_function": "lambda t: 1.0 + 0.0*t"
                },
                "initial_guess": {
                    "function_type": "lambda_function",
                    "lambda_function": "lambda t: np.pi/3.0 + 0.0*t"
                }
    }],
  "parameters": [{
                "parameter_name": "delta1",
                "lower_limit": -2.0,
                "upper_limit": 2.0,
                "initial_value": 0.01,
                "amplitude_variation": 0.5
            }],
    "times": [{
        "time_name": "time_1",
        "initial_value": 3.0
    }]
}
